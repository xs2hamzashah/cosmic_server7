# Generated by Django 5.1.1 on 2024-10-07 19:08

import django.db.models.deletion
import listings.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolarSolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('size', models.DecimalField(decimal_places=2, help_text='Solution size in kW (e.g., 5.00 kW)', max_digits=5)),
                ('price', models.DecimalField(decimal_places=2, help_text='Total price of the solution/package', max_digits=10)),
                ('solution_type', models.CharField(choices=[('On-Grid', 'On-Grid'), ('Hybrid', 'Hybrid'), ('Off-Grid', 'Off-Grid')], help_text='Select the type of solar solution', max_length=50)),
                ('completion_time_days', models.PositiveIntegerField(default=15, help_text='Estimated completion time in days')),
                ('payment_schedule', models.CharField(choices=[('100% Advance', '100% Advance'), ('Flexible', 'Flexible')], default='Flexible', help_text='Payment schedule for the solution', max_length=50)),
                ('seller', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solar_solutions', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='solar_solutions', to='listings.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('dc_earthing_included', models.BooleanField(default=False, help_text='Is DC Earthing included?')),
                ('afss_included', models.BooleanField(default=False, help_text='Is AFSS included?')),
                ('afss_warranty_years', models.PositiveIntegerField(blank=True, help_text='AFSS warranty in years if included', null=True)),
                ('online_monitoring_included', models.BooleanField(default=False, help_text='Is online monitoring included?')),
                ('net_metering_included', models.BooleanField(default=False, help_text='Is net metering included?')),
                ('fire_extinguisher_included', models.BooleanField(default=False, help_text='Is HSE service included?')),
                ('transportation_included', models.BooleanField(default=True, help_text='Is transportation included?')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='listings.solarsolution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolutionDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('details_type', models.CharField(choices=[('PV Module', 'PV Module'), ('Inverter', 'Inverter'), ('Battery', 'Battery'), ('Electrical Work', 'Electrical Work'), ('Mechanical Work', 'Mechanical Work'), ('Civil Work', 'Civil Work')], max_length=50)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('warranty', models.DecimalField(decimal_places=1, default=1, max_digits=4)),
                ('details', models.TextField(blank=True, null=True)),
                ('material', models.CharField(blank=True, choices=[('Iron', 'Iron'), ('Aluminium', 'Aluminium'), ('GI', 'GI'), ('PVC', 'PVC'), ('Other', 'Other')], max_length=50, null=True)),
                ('structure_type', models.CharField(blank=True, choices=[('L2', 'L2'), ('L3', 'L3'), ('Special', 'Special'), ('Sawtooth', 'Sawtooth'), ('Other', 'Other')], max_length=50, null=True)),
                ('solar_solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='listings.solarsolution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolutionMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, help_text='Upload an image of the solution', null=True, upload_to=listings.models.upload_to)),
                ('is_display_image', models.BooleanField(default=False, help_text='Indicates if this image is the display image for the solution')),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mediafiles', to='listings.solarsolution')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
